vrrp_script chk_sfnode {
    script "/etc/keepalived/getAgentStatus.sh"
    weight 10
    interval 2
    fall 2
    rise 2
}
vrrp_instance VI_1 {
    debug 2
    interface eth0 # interface to monitor
    <% if ( spec.bootstrap === TRUE ) %>
    state MASTER
    virtual_router_id 51 # Assign one ID for this route
    priority 101 # 101 on master, 100 on backup
    unicast_src_ip <%= spec.ip %> # My IP
    unicast_peer {
        10.11.252.11 # peer IP
    }
    <% else %>
    state BACKUP
    virtual_router_id 51 # Assign one ID for this route
    priority 100 # 101 on master, 100 on backup
    unicast_src_ip <%= spec.ip %> # My IP
    unicast_peer {
        10.11.252.10 # peer IP
    }
    <% end %>     
    track_script {
        chk_sfnode
    }
    # for ANY state transition.
    # "notify" script is called AFTER the
    # notify_* script(s) and is executed
    # with 3 arguments provided by keepalived
    # (ie donâ€™t include parameters in the notify line).
    # arguments
    # $1 = "GROUP"|"INSTANCE"
    # $2 = name of group or instance
    # $3 = target state of transition
    #     ("MASTER"|"BACKUP"|"FAULT")
    notify /etc/keepalived/notify.sh
    notify_master /etc/keepalived/master.sh
}
