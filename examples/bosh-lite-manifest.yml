<%
  director_uuid = `bosh status --uuid 2>/dev/null`.strip

  redirect_uri = "https://services-fabrik-broker.bosh-lite.com/manage/auth/cloudfoundry/callback"

  def base64_template(prefix)
    filename = "src/service-fabrik-broker/config/templates/#{prefix}-manifest.yml.ejs"
    JSON.dump(Base64.encode64(File.read(filename)))
  end
%>
---
#####################################
# DEPLOYMENT IDENTIFICATION SECTION #
#####################################
name: service-fabrik
director_uuid: <%= director_uuid %>


####################
# RELEASES SECTION #
####################
releases:
- { name: cf, version: latest }
- { name: service-fabrik, version: latest }


####################
# NETWORKS SECTION #
####################
networks:
  - name: default
    type: manual
    subnets:
      - cloud_properties: {}
        range: 10.244.4.0/24
        reserved:
          - 10.244.4.1
        static:
          - 10.244.4.2 # broker/0
          - 10.244.4.3 # docker/0
          - 10.244.4.4 # docker/1 (if you have configured a second node)


##########################
# RESOURCE POOLS SECTION #
##########################
resource_pools:
- name: default
  network: default
  stemcell:
    name: bosh-warden-boshlite-ubuntu-trusty-go_agent
    version: latest
  cloud_properties: {}


######################
# DISK POOLS SECTION #
######################
disk_pools:
- name: docker
  disk_size: 5_000


#######################
# COMPILATION SECTION #
#######################
compilation:
  network: default
  reuse_compilation_vms: true
  workers: 4
  cloud_properties: {}


##################
# UPDATE SECTION #
##################
update:
  canaries: 0         # safer but slower: watch one machine closely at first
  canary_watch_time: 1000-60000
  update_watch_time: 1000-60000
  max_in_flight: 1000 # update the rest in parallel
  serial: true        # update docker jobs before broker job that runs swarm;
                      # see swarm discovery issue (depending on that order):
                      # https://github.com/cf-platform-eng/docker-boshrelease/issues/35


################
# JOBS SECTION #
################
jobs:
- name: docker
  instances: 1
  networks:
  - name: default
    static_ips:
    - 10.244.4.3
  resource_pool: default
  persistent_disk_pool: docker
  templates:
  - name: docker
    release: service-fabrik

- name: broker
  instances: 1
  networks:
  - name: default
    static_ips:
    - 10.244.4.2
  resource_pool: default
  templates:
  - name: service-fabrik-broker
    release: service-fabrik
  - name: swarm_manager
    release: service-fabrik
  - name: route_registrar
    release: cf


######################
# PROPERTIES SECTION #
######################
properties:

  ########################
  # SWARM JOB PROPERTIES #
  ########################
  # - required by swarm to find its docker cluster nodes
  swarm:
    # comma separated list of docker cluster nodes, missing nodes are ignored by swarm
    discovery: nodes://10.244.4.3:4243,10.244.4.4:4243

  #########################
  # DOCKER JOB PROPERTIES #
  #########################
  docker:
    # bind to any interface
    tcp_address: 0.0.0.0
    # max open files for Docker daemon process
    ulimit:
      nofile: 1_000_000
  lvmvd:
    # enable/disable Docker volume quota
    disabled: true

  ##############################
  # ROUTE REGISTRAR PROPERTIES #
  ##############################
  # - required for registration of broker route at router via nats
  route_registrar:
    routes:
    - name: service-fabrik-broker
      registration_interval: 20s
      port: 9292
      tags:
        component: service-fabrik-broker
        env: production
      uris:
      - service-fabrik-broker.bosh-lite.com
      health_check:
        name: service-fabrik-broker-health-check
        script_path: '/var/vcap/jobs/service-fabrik-broker/bin/health_check'
        timeout: 5s

  ###################
  # NATS PROPERTIES #
  ###################
  # - required for registration of broker route at router via nats
  nats:
    user: nats
    password: nats
    machines:
    - 10.244.0.6
    port: 4222


  #########################
  # BROKER JOB PROPERTIES #
  #########################
  broker:
    ####################
    # GENERAL SETTINGS #
    ####################
    name: service-fabrik-broker
    host: service-fabrik-broker.bosh-lite.com
    port: 9292
    username: broker
    password: secret
    cookie_secret: '770f7f68-772d-422d-a58c-7fa284dc4fd6'
    external_ip: 10.244.4.2
    ssl_enabled: true
    skip_ssl_validation: true

    #############################
    # CLOUD-CONTROLLER SETTINGS #
    #############################
    cf:
      url: https://api.bosh-lite.com
      username: admin
      password: admin

    ###################
    # DOCKER SETTINGS #
    ###################
    docker:
      url: "unix:///var/vcap/sys/run/swarm_manager/swarm_manager.sock" # how to connect the broker to swarm
      allocate_docker_host_ports: true                                 # if true the broker will allocate fixed port mappings for the containers

    #####################
    # DIRECTOR SETTINGS #
    #####################
    director:
      url: https://192.168.50.4:25555
      username: admin
      password: admin
      skip_ssl_validation: true
      infrastructure:
        stemcell:
          name: bosh-warden-boshlite-ubuntu-trusty-go_agent
          version: latest
        segmentation:
          network_name: default
          # calculate capacity based on the network range
          capacity: -1
          offset: 1
          size: 8
        azs:
        - { name: z1, cloud_properties: { name: random } }
        - { name: z2, cloud_properties: { name: random } }
        - { name: z3, cloud_properties: { name: random } }
        vm_types:
        - { name: micro,    cloud_properties: { name: random } }
        - { name: small,    cloud_properties: { name: random } }
        - { name: medium,   cloud_properties: { name: random } }
        - { name: large,    cloud_properties: { name: random } }
        - { name: xlarge,   cloud_properties: { name: random } }
        - { name: 2xlarge,  cloud_properties: { name: random } }
        - { name: 4xlarge,  cloud_properties: { name: random } }
        - { name: 10xlarge, cloud_properties: { name: random } }
        disk_types:
        - { name: hdd_1gb,   disk_size:     1_024 } # minimum size 1GiB (2^30), everything else is similar to hard disk vendors (10^x)
        - { name: hdd_2gb,   disk_size:     2_000 }
        - { name: hdd_4gb,   disk_size:     4_000 }
        - { name: hdd_6gb,   disk_size:     6_000 }
        - { name: hdd_8gb,   disk_size:     8_000 }
        - { name: hdd_10gb,  disk_size:    10_000 }
        - { name: hdd_20gb,  disk_size:    20_000 }
        - { name: hdd_40gb,  disk_size:    40_000 }
        - { name: hdd_60gb,  disk_size:    60_000 }
        - { name: hdd_80gb,  disk_size:    80_000 }
        - { name: hdd_100gb, disk_size:   100_000 }
        - { name: hdd_200gb, disk_size:   200_000 }
        - { name: hdd_400gb, disk_size:   400_000 }
        - { name: hdd_600gb, disk_size:   600_000 }
        - { name: hdd_800gb, disk_size:   800_000 }
        - { name: hdd_1tb,   disk_size: 1_000_000 }
        - { name: hdd_2tb,   disk_size: 2_000_000 }
        - { name: hdd_4tb,   disk_size: 4_000_000 }
        - { name: hdd_6tb,   disk_size: 6_000_000 }
        - { name: hdd_8tb,   disk_size: 8_000_000 }
        networks:
        - name: default
          type: manual
          subnets:
          - { range: 10.244.10.0/24, az: z1, cloud_properties: { name: random } }
          - { range: 10.244.11.0/24, az: z2, cloud_properties: { name: random } }
          - { range: 10.244.12.0/24, az: z3, cloud_properties: { name: random } }
        - name: compilation
          type: dynamic
        compilation:
          network: compilation
          reuse_compilation_vms: true
          workers: 4
          cloud_properties: { name: random }

    ####################
    # SERVICES CATALOG #
    ####################
    services:
    - id: '6855ef2c-e036-4984-9654-f6b0169d95de'
      name: 'redis'
      description: &description 'Redis in-memory data structure store'
      bindable: true
      tags:
      - 'redis'
      - 'keyvalue'
      metadata:
        displayName: 'Redis'
        longDescription: *description
        providerDisplayName: 'Provider'
        documentationUrl: 'http://redis.io/documentation'
        supportUrl: 'http://redis.io/community'
      dashboard_client:
        id: 'e317d88d-86c8-4103-8212-5c41025e1f6f'
        secret: '08263931-0e77-419c-9f37-4f673d4e36d1'
        redirect_uri: <%= redirect_uri %>
      plan_updateable: true
      plans:
      ###########################
      # CONTAINER SERVICE PLANS #
      ###########################
      - id: '39c1cf1f-c698-4db1-a0c5-42cfc394f246'
        name: 'v3.0-container'
        free: true
        manager:
          name: 'docker'
          settings:
            image: 'weberstephanhd/redis'
            tag: '3.0.7.1'
            memory: '50m'
            persistent_volumes:
            - name: 'data'
              path: '/data'
              size: '500m'
            environment:
            - 'REDIS_MAXMEMORY=31457280'
        credentials:
          password:
            key: 'REDIS_PASSWORD'
        description: 'Redis 3.0.7 service running inside a Docker container'
        metadata:
          costs:
          - amount:
              usd: 0.0
            unit: 'MONTHLY'
          bullets:
          - 'Container Deployment'
          - '50 MB Memory'
          - '30 MB Redis maxmemory'
          - '500 MB Disk'
      - id: '33c16a3d-7c81-4b78-999a-599583c89915'
        name: 'v3.0-container-large'
        free: true
        manager:
          name: 'docker'
          settings:
            image: 'weberstephanhd/redis'
            tag: '3.0.7.1'
            memory: '450m'
            persistent_volumes:
            - name: 'data'
              path: '/data'
              size: '1g'
            environment:
            - 'REDIS_MAXMEMORY=314572800'
        credentials:
          password:
            key: 'REDIS_PASSWORD'
        description: 'Redis 3.0.7 service running inside a large Docker container'
        metadata:
          costs:
          - amount:
              usd: 0.0
            unit: 'MONTHLY'
          bullets:
          - 'Container Deployment'
          - '450 MB Memory'
          - '300 MB Redis maxmemory'
          - '1 GB Disk'
